#!/usr/bin/env python

def matrix_pow(i_n):
    if i_n == 0:
        return [[1, 0], [0, 1]]
    if i_n == 1:
        return [[1, 1], [1, 0]]
    r = [[1, 0], 
         [0, 1]]
    a = [[1, 1], [1, 0]]
    while i_n > 0:
        if i_n & 1 == 1:
            r00 = r[0][0] * a[0][0] + r[0][1] * a[1][0]
            r01 = r[0][0] * a[0][1] + r[0][1] * a[1][1]
            r10 = r[1][0] * a[0][0] + r[1][1] * a[1][0]
            r11 = r[1][0] * a[0][1] + r[1][1] * a[1][1]
            
            r[0][0] = r00 % 1000000007
            r[0][1] = r01 % 1000000007
            r[1][0] = r10 % 1000000007
            r[1][1] = r11 % 1000000007
        a00 = a[0][0] * a[0][0] + a[0][1] * a[1][0]
        a01 = a[0][0] * a[0][1] + a[0][1] * a[1][1]
        a10 = a[1][0] * a[0][0] + a[1][1] * a[1][0]
        a11 = a[1][0] * a[0][1] + a[1][1] * a[1][1]
            
        a[0][0] = a00 % 1000000007
        a[0][1] = a01 % 1000000007
        a[1][0] = a10 % 1000000007
        a[1][1] = a11 % 1000000007
        i_n //= 2
    return r

def fib(i_n, i_a, i_b):
    m = matrix_pow(i_n)
    return (m[1][0] * i_b + m[1][1] * i_a) % 1000000007

t = int(raw_input().strip())
for _ in xrange(t):
    a, b, n = map(int, raw_input().strip().split())
    print fib(n, a, b)

